/*
- Name: Plugin name
- Version: 1.0
- Author: Mario Loncarek
- Author web site: http://marioloncarek.com
*/

/* VARIABLES */

$menu-bg: #f5f5f5 !default;
$hover-and-dropdown-bg: #0071bc !default;
$level-1-font-size: 1em !default;
$level-1-color: #444 !default;
$level-1-color-hover: #fff !default;
$level-2-font-size: 1em !default;
$level-2-color: #fff !default;
$level-2-border: 1px solid #ccc !default;
$level-2-child-width: 25% !default;
$classic-dropdown-width: 300px !default;
$level-3-font-size: .9em !default;
$responsive-breakpoint: 767px !default;
$megamenu-z-index: 99 !default;

@mixin clearfix {
  &:before,
  &:after {
    display: table;
    content: ' ';
  }
  &:after {
    clear: both;
  }
}

@mixin reset-menu-elements() {
  margin: 0;
  padding: 0;
}

@mixin breakpoint($point, $min-or-max: max-width) {
  @media only screen and ($min-or-max: $point) {
    @content;
  }
}

@mixin transitions($property: all, $duration: .2s, $timing-function: ease, $delay: 0s) {
  transition: $property $duration $timing-function $delay;
}

/* MENU */

.menu {
  width: 80%;
  margin: 0 auto;
  background: $menu-bg;
  @include breakpoint($responsive-breakpoint) {
    width: 100%;
  }
  ul {
    @include reset-menu-elements;
    @include clearfix;
    list-style: none;
    position: relative;
    /* IF .menu position=relative -> ul = container width, ELSE ul = 100% width */
    z-index: $megamenu-z-index;
    @include breakpoint($responsive-breakpoint) {
      display: none;
    }
    &.is-shown-on-mobile {
      display: block;
    }
    > li {
      @include reset-menu-elements;
      @include transitions;
      float: left;
      @include breakpoint($responsive-breakpoint) {
        width: 100%;
        position: relative;
      }
      > a {
        @include transitions;
        display: block;
        padding: 1.5em 2.5em;
        color: $level-1-color;
        font-size: $level-1-font-size;
      }
      &:hover {
        background: $hover-and-dropdown-bg;
        color: $level-1-color-hover;
        > a {
          color: $level-1-color-hover;
        }
      }
      > ul {
        display: none;
        position: absolute;
        left: 0;
        width: 100%;
        background: $hover-and-dropdown-bg;
        @include breakpoint($responsive-breakpoint) {
          position: relative;
        }
        &.is-classic-dropdown {
          width: $classic-dropdown-width;
          left: inherit;
          @include breakpoint($responsive-breakpoint) {
            width: 100%;
          }
          > li {
            width: 100%;
            > a {
              border: 0;
              padding: 1em;
            }
          }
        }
        > li {
          width: $level-2-child-width;
          padding: 0 1.5em;
          @include breakpoint($responsive-breakpoint) {
            width: 100%;
            padding: 0;
          }
          > a {
            padding: 1em 0 .5em;
            border-bottom: $level-2-border;
            color: $level-2-color;
            font-size: $level-2-font-size;
            @include breakpoint($responsive-breakpoint) {
              border: 0;
              padding: 1.5em 4em;
            }
          }
          > ul {
            display: block;
            position: relative;
            padding: 1em 0;
            @include breakpoint($responsive-breakpoint) {
              display: none;
              background: lighten($hover-and-dropdown-bg, 5%);
              padding: 0;
            }
            > li {
              width: 100%;
              padding: 0;
              > a {
                padding: .5em 0;
                border: 0;
                font-size: $level-3-font-size;
                text-transform: uppercase;
                @include breakpoint($responsive-breakpoint) {
                  padding: 1.5em 0 1.5em 6em;
                }
              }
            }
          }
        }
      }
    }
  }
}

.dropdown-button {
  -webkit-appearance: none;
  outline: none;
  border: 0;
  cursor: pointer;
  display: none;
  vertical-align: top;
  @include breakpoint($responsive-breakpoint) {
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    width: 60px;
  }
  .dropdown-button-text {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    top: 1.5em;
    width: 14px; //looks better when even number
    height: 14px; //looks better when even number
    &:before,
    &:after {
      content: "";
      position: absolute;
      background-color: #fff;
      @include transitions;
    }
    &:before {
      top: 0;
      left: 50%;
      transform: translateX(-50%);
      width: 2px;
      height: 100%;
    }
    &:after {
      top: 50%;
      transform: translateY(-50%);
      left: 0;
      width: 100%;
      height: 2px;
    }
    &.is-active {
      &:before {
        opacity: 0;
      }
    }
  }
}

/* CSS ANIMATION FROM ANIMATE.CSS */

.animation-in {
  animation: .2s ease;
  animation-name: fadeIn;
}

.animation-out {
  animation: .2s ease;
  animation-name: fadeOut;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

/* MOBILE MENU */

/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */

// Settings
// ==================================================
$hamburger-padding-x: 1.5em !default;
$hamburger-padding-y: 1.5em !default;
$hamburger-layer-width: 25px !default;
$hamburger-layer-height: 2px !default;
$hamburger-layer-spacing: 6px !default;
$hamburger-layer-color: #444 !default;
$hamburger-layer-border-radius: 4px !default;
$hamburger-hover-opacity: 0.7 !default;
$hamburger-hover-transition-duration: 0.15s !default;
$hamburger-hover-transition-timing-function: linear !default;

// To use CSS filters as the hover effect instead of opacity,
// set $hamburger-hover-use-filter as true and
// change the value of $hamburger-hover-filter accordingly.
$hamburger-hover-use-filter: false !default;
$hamburger-hover-filter: opacity(50%) !default;

.hamburger {
  padding: $hamburger-padding-y $hamburger-padding-x;
  display: none;
  @include breakpoint($responsive-breakpoint) {
    display: table;
    width: 100%;
  }
  cursor: pointer;
  width: 100%;

  transition-property: opacity, filter;
  transition-duration: $hamburger-hover-transition-duration;
  transition-timing-function: $hamburger-hover-transition-timing-function;

  // Normalize (<button>)
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible;
  text-align: left;

  &:hover {
    @if $hamburger-hover-use-filter == true {
      filter: $hamburger-hover-filter;
    } @else {
      opacity: $hamburger-hover-opacity;
    }
  }
}

.hamburger-menu-text {
  vertical-align: middle;
}

.hamburger-box {
  width: $hamburger-layer-width;
  height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;
  display: inline-block;
  position: relative;
  float: right;
}

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: $hamburger-layer-height / -2;

  &,
  &::before,
  &::after {
    width: $hamburger-layer-width;
    height: $hamburger-layer-height;
    background-color: $hamburger-layer-color;
    border-radius: $hamburger-layer-border-radius;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease;
  }

  &::before,
  &::after {
    content: "";
    display: block;
  }

  &::before {
    top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
  }

  &::after {
    bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
  }
}

.hamburger--squeeze {
  .hamburger-inner {
    transition-duration: 0.1s;
    transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);

    &::before {
      transition: top 0.1s 0.14s ease,
      opacity 0.1s ease;
    }

    &::after {
      transition: bottom 0.1s 0.14s ease,
      transform 0.1s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    }
  }

  &.is-active {
    .hamburger-inner {
      transform: rotate(45deg);
      transition-delay: 0.14s;
      transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);

      &::before {
        top: 0;
        opacity: 0;
        transition: top 0.1s ease,
        opacity 0.1s 0.14s ease;
      }

      &::after {
        bottom: 0;
        transform: rotate(-90deg);
        transition: bottom 0.1s ease,
        transform 0.1s 0.14s cubic-bezier(0.215, 0.61, 0.355, 1);
      }
    }
  }
}